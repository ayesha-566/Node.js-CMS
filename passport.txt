
In mmain.js routes file:
passport.use(new localStrategy({usernameField:"email"},(email,password,done)=>{
    User.findOne({email:email}).then(user=>{
        if(!user){
            return done(null,false,{message:"User not found"})
        }
        //validating password
        bcrypt.compare(password,user.password,(error,matched)=>{
            if(error){
                return error;
            }
            if(matched){
                console.log("Password matched");

                return done(null,user);
            }
            else{
                console.log("Password not matched");
                return done(null,false,{message:"Incorrect password"});

            }
        })
    })
}));

passport.serializeUser(function(user,done){
    console.log("Inside serializer");
    done(null.defaultLayout,user.id);
  
});
passport.deserializeUser(function(id,done){
    console.log("Inside deserializer")
    User.findById(id,(err,user)=>{
        done(err,user);
    });
});
router.post("/login",(req,res,next)=>{
    //First parameter "local" is the type of strategy to be used
    //Second parameters: 
    console.log("HERE");
    passport.authenticate("local",{
  
     //   successRedirect:"/admin",  // where to redirect in case of success
        failureRedirect:"/login", //where to send in case of failure
        successRedirect:"/admin",
        failureFlash: true
    })
    (req,res,next);
 
});